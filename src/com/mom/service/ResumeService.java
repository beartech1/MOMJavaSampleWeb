package com.mom.service;

import com.google.common.collect.ImmutableList;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class ResumeService {
    /**
     * Returns the text from my resume on dice.com
     */
    public List<String> getResume() {
        return ImmutableList.<String>builder()
                .add("Rick Craver")
                .add("Professional Summary")
                .add("I am a Software Developer with four years experience including exposure to Java, Spring, Hibernate, JavaScript and RDBMS, both SQL and NoSQL.")
                .add("I’m a proponent of leveraging Java 8 functional style features to write code that is more elegant and expressive. In particular, I enjoy writing and reading code dealing with Collections using Streams, the removal of boilerplate code afforded by these enhancements interestingly allows writing Java code in a style that would be at home in a JavaScript file as well.")
                .add("Additionally, I have started learning NodeJS in order to give a talk to our development team during a lunch and learn and I was pleasantly surprised by how versatile and flexible it is. I have found Node useful for scripting simple tasks like bulk renaming files and formatting XML into human and machine readable formats. Node’s more traditional usage on the Server inspired me to attend a Saturday Baltimore Node School workshop as well as a few simple web apps on my own.")
                .add("Skills")
                .add("Java")
                .add("Spring")
                .add("I have deep and broad experience integrating Spring all along Java web applications. I’ve used Spring for managing controllers via Spring MVC, for talking to the database with both Spring JDBC and Hibernate integration, for unit and integration testing in concert with DbUnit to quickly populate the database in tests, as well as the traditional management and injection of dependencies. Spring continues to be probably the most useful Java library out there and I am constantly finding new uses for it.")
                .add("Jackson")
                .add("I have used Jackson to process JSON for a Rest API and for configuration files for operational processes. In particular I have found Jackson’s mapping of properties to be flexible and removes boilerplate processing code. Jackson is also extensible when needed, I have written custom serialization and deserialization modules although the process is non-trivial.")
                .add("Hibernate")
                .add("I have used Hibernate as the ORM solution in a number of projects, most recently leveraging it along side Spring JDBC as well as jOOQ. Hibernate works very well for fixed schema, but I have found it lacking at times with tables that are created dynamically from allowing the customer to extend the data model to meet their specific, unique needs. I have mapped classes to tables using both XML configuration files as well as JPA annotations and have found annotations to be the more readable and maintainable option.")
                .add("JavaScript")
                .add("ExtJS")
                .add("I have had experience building new and modifying existing UI code with ExtJS. ExtJS takes a different approach to client side JavaScript from some other modern frameworks like Angular, React or Aurelia. ExtJS imposes a classical type architecture that a Java developer would find more intuitive without taking advantage of JavaScript’s good parts, the overhead ExtJS incurs building the DOM in such a way can result in difficult to debug problems.")
                .add("NodeJS")
                .add("I have used Node in a professional capacity for scripting some small tasks, but find the prospect of using JavaScript on the server to be compelling, particularly with the community that has evolved around Node with tools such as npm.")
                .add("Database Technologies")
                .add("SQL Server")
                .add("Oracle")
                .add("I have used both SQL Server and Oracle professionally, and have found them to be largely the same save some particular implementation details and available built in functionality. In general I write ANSI complaint SQL and only drop into implementation dependent features when they are needed for specific functionality, or when there is a need based on performance benchmark requirements.")
                .add("Work Experience")
                .add("BioFortis Inc, Columbia, MD")
                .add("Title: Software Developer\tJanuary 2015 – Present")
                .add("Labmatrix")
                .add("Developed enhancements and fixes for Labmatrix biobanking and information collection sample management web application. Worked on the core product to define and develop a new data loading framework for the application for both the fixed schema and client custom data forms. Also worked on several client projects to integrate, customize and configure Labmatrix for their own needs. Clients were able to define their own studies, medical subjects and medical samples as well as other related data pertaining to the biobanking and data mining thereof. Recently I’ve been tasked with developing a Rest API to replace the existing SOAP and RMI APIs that some of our oldest and most important customers used.")
                .add("Responsibilities")
                .add("Participated in Scrum daily meetings as well as Sprint planning, review and retrospectives for core product as well as client specific projects.")
                .add("Worked with another developer to define the new ETL data loading framework for fixed and variable schema of Labmatrix data model.")
                .add("Managed and reported on development progress using JIRA to capture estimates, level of effort and facilitate dialog with other stakeholders including project managers, product owners, clients and testers.")
                .add("Participated in multiple developer and tester workflows using Git branching models.")
                .add("Initiated and participated in peer code reviews for code quality, correctness and adherence to internal coding style guidelines.")
                .add("Contributed to Confluence based documentation for developers concerning deployment topics.")
                .add("Utilized ExtJS JavaScript framework for UI components and HTML/CSS generation.")
                .add("Used Spring MVC, Spring IoC, and Spring JDBC as well as Jackson for the server side of Labmatrix application.")
                .add("Integrated jOOQ and Hibernate with Spring to allow database storage, modification and retrieval in MS SQL Server database.")
                .add("Created SQL scripts migrating data for customer requiring underlying data model changes for new version of the application under development.")
                .add("Wrote and executed automated tests using DbUnit/JUnit to insure safe modification of core product which was deployed to multiple customers as well the labmatrix.net server which was available to smaller customers who didn’t host a Labmatrix instance of their own.")
                .add("Environment: Tomcat 6/7, Java 6/7/8, ExtJS 3/4/5, Spring 3.1, 4.1.x, Hibernate 4.0, 5.1.x, SQL Server 2008/2014, XML, JSON, SQL, IntelliJ, Git, JUnit 4, DbUnit, jOOQ 3.x.")
                .add("Multivision Incorporated, Fairfax, VA July 2013 – January 2015")
                .add("Projects")
                .add("Title: JEE Technical Lead\tApril 2014 – January 2015")
                .add("Recruit Management Platform")
                .add("Led several teams of JEE Associates for iterations to design, build and enhance the Recruit Management Platform used internally for talent management and attraction for college students interested in building a software development career. The Recruit Management Platform allowed users to create an account and, once approved by a mentor, start work on enterprise level projects encompassing all the major JEE technologies. Users were able to consume information in various formats including audio, text and video. Once users had completed the requisite assessments on their skills, the tool managed all details and artifacts for users to create a project. The application had several different levels of user, including mentor, associate and superadmin, which all had different authorization levels.")
                .add("Responsibilities")
                .add("Mentored and trained several teams of entry level JEE associates to complete work on the internal product while gaining experience to be marketed to external clients as JEE developers.")
                .add("Created design documents such as Use Case, Class and Database Design for planning phase of project.")
                .add("Utilized Spring MVC with annotations in order to create the Model-View-Controller.")
                .add("Created a DAO layer with Hibernate 4.0 integrated with Spring 3.1 using Contextual Sessions to store information.")
                .add("Utilized Spring 3.1 AOP functionality along with AspectJ in order to define Aspects at specific Joinpoints to advise for logging purposes.")
                .add("Checked code in and out using SVN repository.")
                .add("Balanced development of critical business software with the enrichment and training of a team of entry level associates, allowing them to use the experience of working to build this application as a valuable bridge to positions with external clients.")
                .add("Placement rate of 100% for Associates under my direction with external clients.")
                .add("Environment: Oracle WebLogic 12c, Java 7, JavaScript, jQuery, Bootstrap 3.2, Spring 3.1, Hibernate 4.0, Oracle 10g, JSP, HTML5, CSS3, XML, PL/SQL, Eclipse Kepler, SVN, JUnit 4.")
                .add("Under Contract to: Gulfstream Aerospace Corporation, Savannah, GA")
                .add("Title: IT Apps Developer\tNovember 2013 – April 2014")
                .add("Ops Driver")
                .add("Responsible for all enhancements to the Ops Driver application for engineering and manufacturing departments. Ops Driver allowed managers to track the completion status of all tasks associated with building the aircraft including Level 1 Installs and individually assembled custom parts. This was defined by manufacturing management as “the most important application in the company” allowing long term planning and coordination to meet demanding end customer deadlines as well as adhering to strict FAA testing requirements. The app interfaced with SAP data exposed as a RESTful Web Service in order to provide tracking information for installed parts on the airframe. Manufacturing and Engineering personnel was able to upload .csv files containing records which would be inserted in the database and the data could be directed into graphs using FusionCharts software.")
                .add("Responsibilities")
                .add("Developed new functionality according to approved enhancements.")
                .add("Submitted ROMs for planning and estimate purposes.")
                .add("Utilized Dojo, JSP and Struts for the presentation layer.")
                .add("Asynchronously accessed data using AJAX XmlHttpRequestObject.")
                .add("Applied aforementioned AJAX calls for filters on the page in order to populate a dependent table according to business needs.")
                .add("Coordinated with Architect, Project Manager, Team Manager, Deployment Team, Maintenance Team and Business Analysts.")
                .add("Environment: WebSphere 7.5.5, Java 5, Dojo 1.5, Struts 1.3, EJB 3.0, Spring 3.0, Hibernate 3.6, Oracle 10g, JSP, XML, JSON, Eclipse Indigo, SVN.")
                .add("Title: JEE Associate\tJuly 2013 – November 2013")
                .add("Project Portfolio Tracker")
                .add("Developed enhancement as module to existing eHRMS application in use at Multivision Inc. This module was to track internal projects as well as their dependent tasks. Project managers could be assigned projects and then those projects could be broken down into tasks which could then individually be assigned to associates to complete. Report functionality was made available to users that could track progress as well as spending for in progress and completed tasks.")
                .add("Responsibilities")
                .add("Integrated module into existing functional application.")
                .add("Create design documents such as Use Case, Class and Database Design for planning phase of project.")
                .add("Utilized jQuery, JSP, CSS and Struts for the View layer.")
                .add("Wrote PL/SQL in order to create Stored Procedures and modify existing database information.")
                .add("Checked code in and out using SVN repository.")
                .add("Coordinated with Technical Lead and a team of other JEE Associates.")
                .add("Environment: Oracle WebLogic 11g, Java 6, jQuery, Struts 1.3, Spring 3.0, REST, Hibernate 3.6, Oracle 10g, JSP, XML, Eclipse Helios, SVN.")
                .build();
    }
}
